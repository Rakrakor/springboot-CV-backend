##database initialization: none/ validate/ update/ create-drop
spring.jpa.hibernate.ddl-auto=none

## ******* LOCAL CONFIG ******
##spring.datasource.url=jdbc:mysql://localhost:3306/CV
##spring.datasource.username=root
##spring.datasource.password=1Koreatrip!


## *******  AWS CONFIG  ******* 
##spring.datasource.url=jdbc:mysql://cv-dba.csk1komvrxyo.us-east-2.rds.amazonaws.com:3306/CV_DB
##spring.datasource.username=admin
##spring.datasource.password=1Techtrip!

## *******  HEROKU CONFIG  ******* 
spring.datasource.url=jdbc:mysql://us-cdbr-iron-east-04.cleardb.net:3306/heroku_1a2bb96627e667b
spring.datasource.username=be18f52ab2ac91
spring.datasource.password=4566aec8
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

##Hibernate Version >5, to prevent Table 'cv.hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings= false

spring.jpa.show-sql=true
logging.level.root=WARN
## Hibernate Logging
##logging.level.org.hibernate.SQL= DEBUG

##Security Mgt: Default login/psw
spring.security.user.name=user
spring.security.user.password=123
spring.security.user.role=ADMIN


##File Mgt: MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB